apply plugin: 'java-library'
apply plugin: 'groovy'
apply plugin: 'jacoco'
apply plugin: 'maven'
apply plugin: 'signing'

repositories {
    jcenter()
}

description = 'Compose binary expression trees via method chaining and evaluate'
group = 'com.javalbert'
archivesBaseName = 'binary-expression-tree'
version = '1.0.0'
sourceCompatibility = 1.8

dependencies {
	api 'org.apache.commons:commons-lang3:3.7'
	api 'org.apache.commons:commons-text:1.2'
	
	testImplementation 'org.codehaus.groovy:groovy-all:2.4.10'
	testImplementation 'org.slf4j:slf4j-simple:1.7.25'
	testImplementation 'org.spockframework:spock-core:1.1-groovy-2.4'
	testImplementation('com.athaydes:spock-reports:1.4.0') { transitive = false }
}

jar {
	manifest {
		attributes(
			'Implementation-Title': project.name,
			'Implementation-Version': project.version
			)
	}
}

jacocoTestReport {
	reports {
		xml.enabled false
		html.enabled true
	}
}

task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives javadocJar, sourcesJar
}

signing {
	sign configurations.archives
}

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			pom.project {
				name 'binary-expression-tree'
				packaging 'jar'
				description 'Compose binary expression trees via method chaining and evaluate'
				url 'https://github.com/Javalbert/binary-expression-tree'

				scm {
					connection 'scm:git:git://github.com/Javalbert/binary-expression-tree.git'
					developerConnection 'scm:git:git@github.com:Javalbert/binary-expression-tree.git'
					url 'https://github.com/Javalbert/binary-expression-tree'
				}

				licenses {
					license {
						name 'The Apache License, Version 2.0'
						url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}

				developers {
					developer {
						id 'albertchan'
						name 'Albert Shun-Dat Chan'
						email 'albert.shun.dat.chan@gmail.com'
					}
				}
			}
		}
	}
}
